# Use for integration testing.

# See core/src/main/resources/default.conf for documentation

gondola {
  hosts = [
    { hostId = "host1", host = "localhost", port = "2828" }
    { hostId = "host2", host = "localhost", port = "2829" }
    { hostId = "host3", host = "localhost", port = "2830" }
  ]
  clusters = [
    { clusterId = "cluster1", hosts =
      [
        {hostId: host1, memberId: 81}
        {hostId: host2, memberId: 82}
        {hostId: host3, memberId: 83}
      ]
    }
  ]
}

##################### raft

raft {
  heartbeat_period = 500
  election_timeout = 1000
  leader_timeout = 10000
  request_vote_period = 500
  command_max_size = 1000
}

##################### gondola

gondola {
  config_reload_period = 10000
  command_pool_warn_threshold = 1000
  command_queue_size = 200
  message_pool_warn_threshold = 1000
  incoming_queue_size = 100
  wait_queue_throttle_size = 100
  batching = true
}

tracing {
  summary_period = 10000
  wait_queue = false
  raft_messages = false
  raft_heartbeats = true
  command = false
  storage = false
  network = false
  message_leak = false
}

##################### storage

storage {
  impl = storage_h2
  save_queue_size = 100
  save_queue_workers = 10
}

storage_fake {
  class = com.yahoo.gondola.impl.FakeStorage
}

storage_h2 {
  class = com.yahoo.gondola.impl.H2dbStorage
  host = localhost
  port = 3306
  type = mysql
  name = gondola
  table = table
}

##################### network

network {
  impl = network_memory
  channel_inactivity_timeout = 150000
}

network_socket {
  class = com.yahoo.gondola.impl.SocketNetwork
  create_socket_retry_period = 2000
}

network_memory {
  class = com.yahoo.gondola.impl.MemoryNetwork
}

##################### gondola command

tracing {
  cli {
    agent = false
    command = false
  }
}


# Used for unit tests. See src/test/java/com/yahoo/gondola/core/GondolaTest.java

# See src/main/resources/default.conf for documentation on all the configs

gondola {
  hosts = [
    { hostId = "A", hostname = "127.0.0.1", port = "2828" }
    { hostId = "B", hostname = "127.0.0.1", port = "2829" }
    { hostId = "C", hostname = "127.0.0.1", port = "2830" }
    { hostId = "D", hostname = "127.0.0.1", port = "2831" }
    { hostId = "E", hostname = "127.0.0.1", port = "2832" }
    { hostId = "F", hostname = "127.0.0.1", port = "2833" }
  ]
  shards = [
    { shardId = "shard1", hosts =
      [
        {hostId: A, memberId: 4}
        {hostId: B, memberId: 5}
        {hostId: C, memberId: 6}
      ]
    },
    { shardId = "shard2", hosts =
      [
        {hostId: D, memberId: 1}
        {hostId: E, memberId: 2}
        {hostId: F, memberId: 3}
      ]
    }
  ]
}

##################### raft

raft {
  heartbeat_period = 100
  election_timeout = 200
  leader_timeout = 300
  request_vote_period = 100
  command_max_size = 1000
}

##################### gondola

gondola {
  config_reload_period = 10000

  tracing {
    summary_period = 60000
    raft_messages = true
    raft_heartbeats = false
    command = false
    storage = false
    network = false
    message_leak = true
  }
}

##################### storage

storage {
  impl = storage.rc
  save_queue_workers = 3

  rc {
    class = com.yahoo.gondola.rc.RcStorage
  }
}

##################### network

network {
  impl = network.rc
  channel_inactivity_timeout = 5000

  rc {
    class = com.yahoo.gondola.rc.RcNetwork
    create_socket_retry_period = 1000
  }
}

##################### clock

clock {
  impl = clock.rc

  rc {
    class = com.yahoo.gondola.rc.RcClock
  }
}


##################### gondola command

tracing {
  cli {
    agent = false
    command = false
  }
}


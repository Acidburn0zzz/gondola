# Used for unit tests. See src/test/java/com/yahoo/gondola/core/GondolaTest.java

# See gondola-sample.conf for documentation of the properties in this config file.

gondola {
  hosts = [
    { hostId = "A", host = "127.0.0.1", port = "2828" }
    { hostId = "B", host = "127.0.0.1", port = "2829" }
    { hostId = "C", host = "127.0.0.1", port = "2830" }
  ]
  clusters = [
    { clusterId = "cluster1", hosts =
      [
        {hostId: A, memberId: 1}
        {hostId: B, memberId: 2}
        {hostId: C, memberId: 3}
      ]
    }
  ]
}

##################### raft

raft {
  heartbeat_period = 100
  election_timeout = 200
  leader_timeout = 300
  request_vote_period = 100
  command_max_size = 1000
}

##################### gondola

gondola {
  config_reload_period = 1000000
  command_pool_warn_threshold = 1000
  command_queue_size = 200
  message_pool_warn_threshold = 1000
  incoming_queue_size = 5
  wait_queue_throttle_size = 5
  batching = true
  file_lock_dir = /tmp
}

tracing {
  summary_period = 60000
  raft_messages = true
  raft_heartbeats = true
  command = true
  storage = true
  network = false
  message_leak = true
}

##################### storage

storage {
  impl = storage_rc
  save_queue_workers = 3
}

storage_rc {
  class = com.yahoo.gondola.rc.RcStorage
}

##################### network

network {
  impl = network_rc
  channel_inactivity_timeout = 150000
}

network_rc {
  class = com.yahoo.gondola.rc.RcNetwork
  create_socket_retry_period = 1000
}

##################### clock

clock {
  impl = clock_rc
}

clock_rc {
  class = com.yahoo.gondola.rc.RcClock
}

##################### gondola command

tracing {
  cli {
    agent = false
    command = false
  }
}

